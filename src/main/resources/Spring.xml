<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

<!--    Spring管理的组件 Service等（control外） -->
<!--扫描-->
    <context:component-scan base-package="com.hkk.ssm">
<!--        排除control注解 ->mvc-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    引入properties-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

<!--    数据源 德鲁伊等-->
<!--    使用properties文件。。。-->
<!--    使用 ${}上面引用properties！-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    </bean>

<!--    Mybatis-->
<!--    SqlSessionFactoryBean -> bean ioc  -->
<!--    通过sqlSessionFactoryBean ->获取FactoryBean提供的Bean（factory）而不是FactoryBean本身-->
<!--    <bean class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--&lt;!&ndash;        不设置id？ -> 不是由我们访问的~~~&ndash;&gt;-->
<!--    </bean>-->

<!--    ?可以在sqlSessionFactoryBean中配置mybatis的配置文件-->
<!--那麽也就不需要mybatis的配置文件啦? 呃呃e-->

    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="mybatis-config.xml"></property>
<!--    直接引用Spring裏的數據源-->
        <property name="dataSource" ref="dataSource"></property>
<!--        Aliases! 也可以放到Spring裏-->
<!--        <property name="typeAliasesPackage" value=""-->
    </bean>

</beans>